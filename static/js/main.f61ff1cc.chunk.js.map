{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotfoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["navIsActive","isActive","classNames","Navigation","className","role","to","App","HomePage","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","isLinkedPerson","table","foundPerson","find","PeopleTable","people","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","loading","setLoading","isError","setIsError","useParams","useEffect","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f61ff1cc.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst navIsActive = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink className={navIsActive} to=\"/\">\n          Home\n        </NavLink>\n\n        <NavLink\n          className={navIsActive}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\n\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  slug: string | undefined;\n};\n\nconst isLinkedPerson = (name: string, table: Person[]) => {\n  const foundPerson = table.find(person => person.name === name);\n\n  return foundPerson\n    ? <PersonLink person={foundPerson} />\n    : name;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          people.map(person => (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  person.motherName\n                    ? isLinkedPerson(person.motherName, people)\n                    : '-'\n                }\n              </td>\n              <td>\n                {\n                  person.fatherName\n                    ? isLinkedPerson(person.fatherName, people)\n                    : '-'\n                }\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length === 0 && !loading && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <PeopleTable people={people} slug={slug} />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}